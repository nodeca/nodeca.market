- var menu_rnd_id = 'rnd' + self.get_label_uid()
- var subscriptionTypes = '$$ JSON.stringify(N.models.users.Subscription.types) $$'

- var items = []

if self.settings.market_can_create_items
  - items.push('new_item')

- items.push('currency')

if self.runtime.is_member && !self.section.is_category
  - items.push('mark_read')
  - items.push('subscription')

- var show_menu = items.filter(function (item) { return item !== 'new_item'; }).length > 0;


if self.selected_cnt
  if items.length > 0
    - items.push('divider')
  - items.push('many_header')
  - items.push('many_unselect')
  if self.settings.market_mod_can_delete_items
    - items.push('many_delete')
  if self.settings.market_mod_can_move_items
    - items.push('many_close')
    - items.push('many_move')

//- If last item is header - remove it
if items.length > 0 && items[items.length - 1] === 'header'
  - items.pop()


.page-actions.market-section-buy__toolbar-controls
  if self.settings.market_can_create_items
    a.btn.btn-secondary.btn-square.icon.icon-plus(
      href=self.link_to('market.new', { $query: { section: (self.section || {})._id } })
      class=show_menu ? 'd-none d-sm-inline-block' : ''
      title=self.t('item_add')
    )

  if self.runtime.is_member && !self.section.is_category
    button.btn.btn-secondary.btn-square.d-none.d-sm-inline-block.icon.icon-check(
      type='button'
      data-on-click='market.section.buy:mark_read'
      data-section-hid=self.section.hid
      title=self.t('mark_read')
    )

  - var subscriptionIcon = 'icon-track-normal'
  - var subscriptionTitle = self.t('subs_normal')

  if (self.subscription === subscriptionTypes.TRACKING)
    - subscriptionIcon = 'icon-track-tracking'
    - subscriptionTitle = self.t('subs_tracking')
  else if (self.subscription === subscriptionTypes.WATCHING)
    - subscriptionIcon = 'icon-track-watching'
    - subscriptionTitle = self.t('subs_watching')

  if (self.subscription && self.subscription !== subscriptionTypes.NORMAL)
    button.btn.btn-secondary.btn-square.d-none.d-sm-inline-block.icon(
      type='button'
      title=subscriptionTitle
      class=subscriptionIcon
      data-on-click='market.section.buy:subscription'
      data-section-hid=self.section.hid
      data-section-subscription=self.subscription
    )

  if show_menu
    .page-actions__dropdown
      button.btn.btn-secondary.btn-square.icon.icon-dropdown.dropdown-toggle(
        type='button'
        id=menu_rnd_id
        aria-haspopup='true'
        aria-expanded='false'
        data-bs-toggle='dropdown'
      )

      .dropdown-menu.dropdown-menu-end(aria-labelledby=menu_rnd_id)

        each item in items
          case item

            when 'new_item'
              a.dropdown-item.d-sm-none(
                href=self.link_to('market.new', { $query: { section: (self.section || {})._id } })
              )= self.t('item_add')

            when 'currency'
              button.dropdown-item(
                type='button'
                data-on-click='market.blocks.currency_select_dlg'
                data-currency=self.settings.market_displayed_currency
              )= self.t('currency')

            when 'mark_read'
              button.dropdown-item.d-sm-none(
                type='button'
                data-on-click='market.section.buy:mark_read'
                data-section-hid=self.section.hid
              )= self.t('mark_read')

            when 'subscription'
              button.dropdown-item(
                type='button'
                data-on-click='market.section.buy:subscription'
                data-section-hid=self.section.hid
                data-section-subscription=self.subscription
              )
                if self.subscription && self.subscription !== subscriptionTypes.NORMAL
                  span.icon.icon-space-after(class=subscriptionIcon)
                = self.t('subscription')

            when 'divider'
              .dropdown-divider

            when 'many_header'
              .dropdown-header=self.t('many_header', { count: self.selected_cnt })

            when 'many_unselect'
              button.dropdown-item(
                type='button'
                data-on-click='market.section.buy:items_unselect'
              )=self.t('many_unselect')

            when 'many_delete'
              button.dropdown-item(
                type='button'
                data-on-click='market.section.buy:delete_many'
              )= self.t('many_delete')

            when 'many_close'
              button.dropdown-item(
                type='button'
                data-on-click='market.section.buy:close_many'
              )= self.t('many_close')

            when 'many_move'
              button.dropdown-item(
                type='button'
                data-on-click='market.section.buy:move_many'
              )= self.t('many_move')
