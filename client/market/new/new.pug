- self.add_raw_data('draft', self.draft)
- self.add_raw_data('draft_id', self.draft_id)
- self.add_raw_data('defaults', self.defaults)
- self.add_raw_data('parse_options', self.parse_options)
- self.add_raw_data('currency_types', self.currency_types)

article#content.market-new
  != self.partial('@common.blocks.navbar.logo_apps')

  nav.breadcrumbs-container
    .layout__container.container-fluid
      != self.partial('@common.blocks.breadcrumbs')

  .layout__container.container-fluid
    != self.partial('@users.blocks.announces')

    header.page-head
      h1.page-head__title(itemprop='name')= self.t('title')

    form#market-new-form(novalidate, data-bind='submit: offer.type() === "buy" ? submitBuy : submitSell, css: { "was-validated": showErrors }')
      fieldset
        .row
          .form-group.col-lg-3.col-md-4.col-sm-6
            select.form-control.custom-select(data-bind="value: offer.type, options: offerTypes, optionsText: 'title', optionsValue: 'value'", required)

        .row
          .form-group.col
            label(for='market-new-title')= self.t('field_title')
            input.form-control#market-new-title(type='text', data-bind="textInput: offer.title", required)

        .row(data-bind="visible: offer.type() === 'sell'")
          .form-group.col-lg-3.col-md-4.col-sm-6
            label(for='market-new-price')= self.t('field_price')
            .input-group
              input.form-control#market-new-price(type='number', step=0.01, min=0, data-bind="value: offer.price_value, attr: { required: offer.type() === 'sell' }")
              select.form-control.market-new__currency.custom-select.input-group-append(data-bind="value: offer.price_currency, options: currencyTypes, optionsText: 'title', optionsValue: 'value', attr: { required: offer.type() === 'sell' }")

        mixin render_section_tree(parent, level)
          //- HTML5 doesn't support nested optgroups, so we emulate this
          //- behavior with non-breaking space indent
          each section in self.sections
            if (section.parent || null) === parent
              if section.is_category
                optgroup(label=Array(level*4+1).join('\u00A0') + section.title)
              else
                option(value=section._id)= Array(level*4+1).join('\u00A0') + section.title
              +render_section_tree(section._id, level + 1)

        .row
          .form-group.col
            label(for='market-new-section')= self.t('field_section')
            select.form-control.custom-select#market-new-section(data-bind="value: offer.section", required)
              option(value="", disabled, selected, hidden)= self.t('section_placeholder')
              +render_section_tree(null, 0)

        -
          var min_images = null, max_images = null;

          if (self.settings.market_items_min_images >= 0) {
            min_images = self.settings.market_items_min_images;
          }

          if (self.settings.market_items_max_images >= 0) {
            max_images = self.settings.market_items_max_images;
          }

          // check if settings are invalid
          if (min_images !== null && max_images !== null && min_images > max_images) {
            min_images = max_images = null;
          }

        if max_images === null || max_images > 0
          .row(data-bind="visible: offer.type() === 'sell'")
            .form-group.col
              //- Hidden
              input#market-new-upload(
                name='files[]'
                type='file'
                style='position: absolute; left: -2000px'
                multiple
              )

              label
                = self.t('field_photos')
                if min_images !== null && max_images !== null
                  if max_images !== null
                    = self.t('field_photos_limit_range', { min: min_images || 0, max: max_images })
                  else
                    = self.t('field_photos_limit_low', { min: min_images || 0 })

              ul.market-new__attach-list.thumb-grid.thumb-grid__m-fluid
                li.market-new__attach-item.thumb-grid__item
                  .thumb-grid__item-inner
                    //- Should 'click' file input in context of current action
                    a.thumb(href='#', onClick='document.getElementById("market-new-upload").click()', data-bind='event: { dragover: $root.plusDragOver, drop: $root.plusDrop }')
                      .thumb__content.icon.icon-plus

                <!-- ko foreach: offer.files -->
                  li.market-new__attach-item.thumb-grid__item(draggable, style='display: none', data-bind='visible: true, event: { dragstart: $root.attachDragStart, dragover: $root.attachDragOver, drop: $root.attachDrop }')
                    .thumb-grid__item-inner
                      .thumb
                        img.thumb__image(data-bind="attr: { src: $root.router.linkTo('core.gridfs_tmp', { bucket: $data + '_sm' }) }")

                        .market-new__attach-controls
                          .market-new__attach-control-item.dropdown.dropup
                            - var menu_rnd_id = 'rnd' + self.get_label_uid()

                            button.btn.btn-link.btn-square.icon.icon-dropdown-local.dropdown-toggle(
                              type='button'
                              id=menu_rnd_id
                              aria-haspopup='true'
                              aria-expanded='false'
                              data-toggle='dropdown'
                            )

                            .dropdown-menu.dropdown-menu-right(aria-labelledby=menu_rnd_id)
                              button.dropdown-item(
                                type='button'
                                data-bind='click: $root.attachSetMain, visible: $index() !== 0'
                              )= self.t('attach_set_main')

                              button.dropdown-item(
                                type='button'
                                data-bind='click: $root.attachDelete'
                              )= self.t('attach_delete')

                        .market-new__attach-main(data-bind='visible: $index() === 0')
                          small= self.t('attach_main')
                <!-- /ko -->

        .row
          .form-group.col
            label(for='market-new-description')
              = self.t('field_description')
              = ' '
              a(href='#', data-bind='click: preview, visible: !showPreview()')= self.t('mode_preview')
              a(style='display: none', href='#', data-bind='click: preview, visible: showPreview()')= self.t('mode_edit')
            textarea.form-control#market-new-description(rows=5, data-bind='textInput: offer.description, visible: !showPreview()', required)
            .market-new__preview.markup(data-bind='html: previewHtml, visible: showPreview()')

        .row(data-bind="visible: offer.type() === 'sell'")
          .form-group.col
            label(for='market-new-barter')= self.t('field_barter')
            input.form-control#market-new-barter(type='text', data-bind='textInput: offer.barter_info')
            small.form-text.text-muted= self.t('field_barter_help')

        .row(data-bind="visible: offer.type() === 'sell'")
          .form-group.col
            .form-check.form-check-inline
              label.form-check-label
                input.form-check-input(type='checkbox', data-bind='checked: offer.delivery')
                = self.t('field_delivery')

        .row(data-bind="visible: offer.type() === 'sell'")
          .form-group.col
            .form-check.form-check-inline
              label.form-check-label
                input.form-check-input(type='checkbox', data-bind='checked: offer.is_new')
                = self.t('field_is_new')

        .row
          .form-actions.col
            button.btn.btn-primary(type='submit', data-bind='enable: !isSubmitting()')= self.t('submit')
