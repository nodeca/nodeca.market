- self.add_raw_data('item', self.item)
- self.add_raw_data('settings', self.settings)
- self.add_raw_data('parse_options', self.parse_options)
- self.add_raw_data('currency_types', self.currency_types)

article#content.market-item-buy-edit
  != self.partial('@common.blocks.navbar.logo_apps')

  nav.breadcrumbs-container
    .layout__container.container-fluid
      != self.partial('@common.blocks.breadcrumbs')

  .layout__container.container-fluid
    != self.partial('@users.blocks.announces')

    header.page-head
      h1.page-head__title(itemprop='name')= self.t('title')

    form#market-edit-form(novalidate, data-bind='submit: submit, css: { "was-validated": showErrors }')
      fieldset
        .row
          .col.mb-3
            label.form-label.market-item-buy-edit__label(for='market-edit-title')= self.t('field_title')
            input.form-control#market-edit-title(type='text', data-bind="textInput: offer.title", required)

        .row
          .col-lg-3.col-md-4.col-sm-6.mb-3
            label.form-label.market-item-buy-edit__label(for='market-edit-price')= self.t('field_price')
            .input-group
              input.form-control#market-edit-price(type='number', step=0.01, min=0, data-bind="value: offer.price_value", required)
              select.form-control.market-item-buy-edit__currency.form-select(data-bind="value: offer.price_currency, options: currencyTypes, optionsText: 'title', optionsValue: 'value'", required)

        mixin sections_tree(sections, deepness)
          each section in sections

            - var prefix = Array(deepness).join('\u2003\u2003');

            option(
              disabled=section.is_category
              value=section._id
            )=prefix + section.title

            if section.children && section.children.length
              +sections_tree(section.children, deepness + 1)

        .row
          .col.mb-3
            label.form-label.market-item-buy-edit__label(for='market-edit-section')= self.t('field_section')
            select.form-control.form-select#market-edit-section(data-bind="value: offer.section", required)
              option(value="", disabled, selected, hidden)= self.t('section_placeholder')
              +sections_tree(self.sections, 1)

        -
          var min_images = null, max_images = null;

          if (self.settings.market_items_min_images >= 0) {
            min_images = self.settings.market_items_min_images;
          }

          if (self.settings.market_items_max_images >= 0) {
            max_images = self.settings.market_items_max_images;
          }

          // check if settings are invalid
          if (min_images !== null && max_images !== null && min_images > max_images) {
            min_images = max_images = null;
          }

        if max_images === null || max_images > 0
          .row
            .col.mb-3
              //- Hidden
              input#market-upload(
                name='files[]'
                type='file'
                style='position: absolute; left: -2000px'
                multiple
              )

              label.form-label.market-item-buy-edit__label
                = self.t('field_photos')
                if min_images !== null && max_images !== null
                  if max_images !== null
                    = self.t('field_photos_limit_range', { min: min_images || 0, max: max_images })
                  else
                    = self.t('field_photos_limit_low', { min: min_images || 0 })

              .market-attach-list
                //- Should 'click' file input in context of current action
                a.market-attach-link(href='#', onClick='document.getElementById("market-upload").click()', data-bind='event: { dragover: $root.plusDragOver, drop: $root.plusDrop }')
                  .market-attach-image.icon.icon-plus

                <!-- ko foreach: offer.files -->
                  .market-attach-link.market-attach-link__m-draggable(draggable, style='display: none', data-bind='visible: true, event: { dragstart: $root.attachDragStart, dragover: $root.attachDragOver, drop: $root.attachDrop }, css: { "market-attach-image__m-main": $index() === 0 }')
                    img.market-attach-image(data-bind="attr: { src: $root.router.linkTo($data.tmp ? 'core.gridfs_tmp' : 'core.gridfs', { bucket: $data.id + '_sm' }) }")

                    .market-attach__controls
                      .market-attach__control-item.dropdown.dropup
                        - var menu_rnd_id = 'rnd' + self.get_label_uid()

                        button.btn.btn-square.icon.icon-dropdown-local.dropdown-toggle(
                          type='button'
                          id=menu_rnd_id
                          aria-haspopup='true'
                          aria-expanded='false'
                          data-bs-toggle='dropdown'
                        )

                        .dropdown-menu.dropdown-menu-end(aria-labelledby=menu_rnd_id)
                          button.dropdown-item(
                            type='button'
                            data-bind='click: $root.attachSetMain, visible: $index() !== 0'
                          )= self.t('attach_set_main')

                          button.dropdown-item(
                            type='button'
                            data-bind='click: $root.attachDelete'
                          )= self.t('attach_delete')

                    .market-attach__main-label(data-bind='visible: $index() === 0')
                      small= self.t('attach_main')
                <!-- /ko -->

        .row
          .col.mb-3
            .market-item-buy__preview-controls
              label.form-label.market-item-buy__label(for='market-edit-description')= self.t('field_description')
              a.market-item-buy__preview-btn.btn.btn-sm(
                data-bind='click: togglePreview, css: { "btn-outline-success": showPreview(), "btn-link": !showPreview() }'
              )=self.t('mode_preview')

            textarea.form-control#market-edit-description(rows=5, data-bind='textInput: offer.description, visible: !showPreview()', required)
            .market-item-buy__preview.markup(data-bind='html: previewHtml, visible: showPreview()')
            .form-text!= self.t('field_description_help', { link: self.link_to('common.faq_markup') })

        .row
          .col.mb-3
            label.form-label.market-item-buy-edit__label(for='market-edit-barter')= self.t('field_barter')
            input.form-control#market-edit-barter(type='text', data-bind='textInput: offer.barter_info')
            .form-text= self.t('field_barter_help')

        .row
          .col.mb-3
            .form-check
              label.form-check-label
                input.form-check-input(type='checkbox', data-bind='checked: offer.delivery')
                = self.t('field_delivery')

        .row
          .col.mb-3
            .form-check
              label.form-check-label
                input.form-check-input(type='checkbox', data-bind='checked: offer.is_new')
                = self.t('field_is_new')

        .row
          .col
            button.btn.btn-primary(type='submit', data-bind='enable: isDirty() && !isSubmitting()')= self.t('submit')
