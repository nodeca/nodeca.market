- var itemStatuses = '$$ JSON.stringify(N.models.market.ItemWish.statuses) $$'
- var isOpen = (self.item.st === itemStatuses.OPEN || self.item.ste === itemStatuses.OPEN)
- var isClosed = (self.item.st === itemStatuses.CLOSED || self.item.ste === itemStatuses.CLOSED)

- self.add_raw_data('settings', self.settings)
- self.add_raw_data('section_hid', self.section.hid)

- self.users = self.users || {};
- self.infractions = self.infractions || {};
- self.own_bookmarks = self.own_bookmarks || [];

- var user = self.users[self.item.user] || {};

article#content.market-item-wish(
  class=isOpen ? 'market-item-wish__m-open' : ''
  class=isClosed ? 'market-item-wish__m-closed' : ''
  class=(self.item.st === itemStatuses.DELETED) ? 'market-item-wish__m-deleted' : ''
  class=(self.item.st === itemStatuses.DELETED_HARD) ? 'market-item-wish__m-deleted-hard' : ''
  class=(self.own_bookmarks.indexOf(self.item._id) !== -1) ? 'market-item-wish__m-bookmarked' : ''
)
  -
    var navbar_args = {};

    if (isOpen) {
      navbar_args.level_up = self.link_to('market.section.wish', { section_hid: self.section.hid, $query: { from: self.item.hid } });
    } else {
      navbar_args.level_up = self.link_to('market.user.wish_closed', { user_hid: user.hid, $query: { from: self.item.hid } });
    }

  != self.partial('@common.blocks.navbar.levelup_apps', navbar_args)

  nav.breadcrumbs-container
    .layout__container.container-fluid
      != self.partial('@common.blocks.breadcrumbs')

  .layout__container.container-fluid
    != self.partial('@users.blocks.announces')
    != self.partial('@market.blocks.drafts')

    header.page-head.market-item-wish__head
      .market-item-wish__title-toolbar
        h1.market-item-wish__title.page-head__title(itemprop='name')
          span.market-item-wish__closed-mark.icon.icon-closed.icon-space-after(title=self.t('closed'))

          span.market-item-wish__title-text= self.item.title

          if self.item.user === self.runtime.user_id && self.settings.market_can_create_items || self.settings.market_mod_can_edit_items
            a.market-item-wish__edit.icon.icon-edit(
              href=self.link_to('market.item.wish.edit', { section_hid: self.section.hid, item_hid: self.item.hid })
              title=self.t('edit')
            )

        .market-item-wish__info
          .market-item-wish__info-item!= self.timetag(self.item.ts, 'relative')
          .market-item-wish__info-item
            if user
              a.market-item-wish__user-link._ucard-popover(
                href=self.link_to('users.member', { user_hid: user.hid })
                data-user-id=user._id
                data-user-ref='market_item_wish:'+self.section.hid+':'+self.item.hid
              )
                = user.name
          .market-item-wish__info-item
            a.market-item-wish__section-link(
              href=self.link_to('market.section.wish', { section_hid: self.section.hid })
            )
              = self.section.title

          if self.item.del_by
            - var delUser = self.users[self.item.del_by] || {}
            p.page-head__descr.market-item-wish__meta-deleted
              = self.t('del_by')
              = ' '
              a(href=self.link_to('users.member', { user_hid: delUser.hid }))= delUser.name
              if self.item.del_reason
                = ' '
                = self.t('del_reason', { text: self.item.del_reason })

      != self.partial('@market.item.wish.blocks.toolbar_controls')

    .market-item-wish__description.markup!= self.item.html

    .market-item-wish__details
      if self.item.location
        .market-item-wish__details-item
          .market-item-wish__details-key= self.t('location')
          .market-item-wish__details-value
            a.market-item-wish__location-link(
              href= '#'
              data-on-click= 'common.blocks.location_show_dlg'
              data-latitude= self.item.location && self.item.location[1]
              data-longitude= self.item.location && self.item.location[0]
            )
              span.icon.icon-location.icon-space-after

              if self.location_name
                = self.location_name

    footer.market-item-wish__controls
      ul.market-item-wish__controls-blk

        li.market-item-wish__control-item.market-item-wish__ts
          != self.timetag(self.item.ts, 'relative')

        - var infraction = self.infractions[self.item._id];
        if infraction
          li.market-item-wish__control-item.market-item-wish__infraction(
            class=infraction.points === 0 ? 'market-item-wish__infraction-m-warning' : ''
          )
            a.btn.market-item-wish__action(
              title=self.t('infraction_title', { points: infraction.points, date: self.date(infraction.ts, 'datetime') })
              href=self.link_to('users.member', { user_hid: user && user.hid }) + '#infraction' + infraction._id
            )
              span.icon.icon-infraction

        if self.settings.can_report_abuse
          li.market-item-wish__control-item
            button.btn.market-item-wish__action.market-item-wish__report(
              title=self.t('report')
              data-item-id=self.item._id
              data-on-click='market.item.wish:report'
            )
              span.icon.icon-report

        if self.runtime.is_member
          li.market-item-wish__control-item.market-item-wish__bookmark
            button.btn.market-item-wish__action.market-item-wish__bookmark-add(
              data-on-click='market.item.wish:item_bookmark'
              data-item-id=self.item._id
              title=self.t('bookmark_add')
            )
              span.icon.icon-bookmark
              span.market-item-wish__bookmarks-count(data-bm-count=self.item.bookmarks)

            button.btn.market-item-wish__action.market-item-wish__bookmark-remove(
              data-on-click='market.item.wish:item_bookmark'
              data-item-id=self.item._id
              data-remove='true'
              title=self.t('bookmark_remove')
            )
              span.icon.icon-bookmark
              span.market-item-wish__bookmarks-count(data-bm-count=self.item.bookmarks)

        if self.item.edit_count
          li.market-item-wish__control-item.market-item-wish__history
            button.btn.market-item-wish__action(
              title=self.t('last_edited', { date: self.date(self.item.last_edit_ts, 'datetime') })
              data-on-click='market.item.wish:history'
              data-item-id=self.item._id
            )
              span.icon.icon-history.icon-space-after= self.item.edit_count

        li.market-item-wish__control-item.market-item-wish__views
          span.icon.icon-views.icon-space-after(
            title=self.t('views')
          )
            = self.item.views

    .market-item-wish-responses
      if user && user._id === self.runtime.user_id
        if self.responses && self.responses.length > 0
          .market-item-wish-responses__header= self.t('responded')

          ul.market-item-wish-responses__item-list
            each response in self.responses
              li.market-item-wish-response
                - var from = self.users[response.user] || {};
                a.market-item-wish-response__link(
                  href=self.link_to('users.dialog', { dialog_id: response.dialog, message_id: response.message })
                )
                  img.market-item-wish-response__avatar(alt=from.name)&attributes(self.avatar(from, 'sm'))
                  = from.name

        else
          p.market-item-wish-responses__m-empty= self.t('no_responses')

      else if self.runtime.is_member
        button.btn.btn-secondary.market-item-wish__contact(
          data-on-click='market.item.wish:contact'
          data-to-nick=user.nick
          data-to-hid=user.hid
          data-ref='market_item_wish:'+self.section.hid+':'+self.item.hid
          data-item-id=self.item._id
        )= self.t('contact')

    if self.similar_items && self.similar_items.length > 0
      .market-item-wish-similar
        .market-item-wish-similar__header= self.t('similar_items')

        ul.market-item-wish-similar__item-list
          each s in self.similar_items
            li.market-item-wish-similar-item
              a.market-item-wish-similar-item__title(href=self.link_to('market.item.wish', { section_hid: s.section_hid, item_hid: s.item.hid }))
                = s.item.title
