- var menu_rnd_id = 'rnd' + self.get_label_uid()

- var items = []

- items.push('currency')

- var show_menu = items.length > 0;


if self.selected_cnt
  if items.length > 0
    - items.push('divider')
  - items.push('many_header')
  - items.push('many_unselect')
  if self.settings.market_mod_can_delete_items
    - items.push('many_delete')
    - items.push('many_undelete')
  if self.settings.market_mod_can_move_items
    - items.push('many_open')
    - items.push('many_close')
    - items.push('many_move')

//- If last item is header - remove it
if items.length > 0 && items[items.length - 1] === 'header'
  - items.pop()


.page-actions.market-user__toolbar-controls
  if show_menu
    .page-actions__dropdown
      button.btn.btn-secondary.btn-square.icon.icon-dropdown.dropdown-toggle(
        type='button'
        id=menu_rnd_id
        aria-haspopup='true'
        aria-expanded='false'
        data-toggle='dropdown'
      )

      .dropdown-menu.dropdown-menu-right(aria-labelledby=menu_rnd_id)

        each item in items
          case item

            when 'currency'
              button.dropdown-item(
                type='button'
                data-on-click='market.blocks.currency_select_dlg'
                data-currency=self.settings.market_displayed_currency
              )= self.t('currency')

            when 'divider'
              .dropdown-divider

            when 'many_header'
              .dropdown-header=self.t('many_header', { count: self.selected_cnt })

            when 'many_unselect'
              button.dropdown-item(
                type='button'
                data-on-click='market.user.buy_closed:items_unselect'
              )=self.t('many_unselect')

            when 'many_delete'
              button.dropdown-item(
                type='button'
                data-on-click='market.user.buy_closed:delete_many'
              )= self.t('many_delete')

            when 'many_undelete'
              button.dropdown-item(
                type='button'
                data-on-click='market.user.buy_closed:undelete_many'
              )= self.t('many_undelete')

            when 'many_close'
              button.dropdown-item(
                type='button'
                data-on-click='market.user.buy_closed:close_many'
              )= self.t('many_close')

            when 'many_open'
              button.dropdown-item(
                type='button'
                data-on-click='market.user.buy_closed:open_many'
              )= self.t('many_open')

            when 'many_move'
              button.dropdown-item(
                type='button'
                data-on-click='market.user.buy_closed:move_many'
              )= self.t('many_move')
